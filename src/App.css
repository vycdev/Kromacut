/* Minimal styles for uploader */
.uploader-root {
  /* fill the viewport but remain flexible inside the body */
  padding: 1rem;
  box-sizing: border-box;
  color: inherit;
  font-family: system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;
  display: flex;
  flex-direction: column;
  flex: 1 1 100%;
  min-width: 0;
  max-width: 100%;
  /* allow vertical shrink when viewport is constrained */
  min-height: 0;
  height: 100vh;
}

/* ensure the root fills available width so the grid can expand */
.uploader-root {
  width: 100%;
  max-width: 100%;
}

.uploader-root h1 {
  margin: 0 0 1rem 0;
  font-size: 1.25rem;
}

.app-layout {
  display: grid;
  /* left column controlled by CSS variable; fallback to 1fr */
  grid-template-columns: var(--left-width, 25%) 10px 1fr;
  gap: 1rem;
  flex: 1 1 auto;
  height: 100%;
  /* allow flex children to shrink without forcing overflow */
  min-height: 0;
}

/* make the grid fill its container so columns can be resized freely */
.app-layout {
  width: 100%;
}

/* Allow grid children to shrink when grid columns become small (prevents
   intrinsic min-width from blocking the column resize when dragging the splitter) */
.app-layout > * {
  min-width: 0;
}

.sidebar {
  background: rgba(0,0,0,0.12);
  padding: 1rem;
  border-radius: 8px;
  height: 100%;
  box-sizing: border-box;
}

/* allow sidebar to shrink below its content's intrinsic width and clip/wrap content */
.sidebar {
  min-width: 0;
  overflow: hidden;
}

.controls-panel h2 {
  margin: 0 0 0.5rem 0;
  font-size: 1rem;
}

/* grouped controls with subtle border and padding */
.controls-group {
  border: 1px solid rgba(255,255,255,0.06);
  padding: 0.75rem;
  border-radius: 8px;
  margin-bottom: 0.75rem;
  background: rgba(255,255,255,0.01);
}

/* center contents for this group */
.controls-group--center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.placeholder.small p {
  margin: 0 0 0.5rem 0;
}

.uploader-controls {
  margin-top: 0.75rem;
}

.preview-area {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  height: 100%;
  min-height: 0;
  overflow: hidden;
}

/* allow the preview-area to shrink/grow horizontally inside the grid */
.preview-area {
  min-width: 0;
}

.uploader-controls {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

/* let the inline buttons wrap when the sidebar narrows */
.uploader-controls {
  flex-wrap: wrap;
}
.uploader-controls button {
  flex: 0 1 auto;
  min-width: 0;
}

.splitter {
  background: transparent;
  width: 10px;
  cursor: col-resize;
  display: flex;
  align-items: center;
  justify-content: center;
}
.splitter::before {
  content: '';
  width: 2px;
  height: 40%;
  background: rgba(255,255,255,0.08);
  border-radius: 2px;
}

.dropzone {
  border: 2px dashed rgba(255,255,255,0.12);
  border-radius: 8px;
  padding: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  /* fill the preview column */
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  background: rgba(255,255,255,0.02);
  min-height: 0;
  overflow: hidden;
  position: relative; /* anchor absolute buttons inside the dropzone */
}

/* let the dropzone flex to fill the preview column and not force intrinsic sizing */
.dropzone {
  flex: 1 1 auto;
  min-width: 0;
}
.dropzone.dragover {
  border-color: rgba(255,255,255,0.28);
  background: rgba(255,255,255,0.03);
}

.preview-container {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.preview-container {
  min-width: 0;
  box-sizing: border-box;
}

/* position anchor for crop overlay */
.preview-container {
  position: relative;
}

.preview-container {
  min-height: 0;
  overflow: hidden;
}

.preview-container canvas {
  width: 100%;
  height: 100%;
  display: block;
  border-radius: 6px;
}

/* crop button (disabled when no image) */
.preview-crop-btn {
  position: absolute;
  top: 25px;
  right: 25px;
  width: 40px; /* fixed size */
  height: 40px;
  padding: 0;
  border-radius: 6px;
  border: 1px solid rgba(0,0,0,0.08);
  background: #ffffff;
  color: inherit;
  cursor: pointer;
  z-index: 10;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
.preview-crop-btn i {
  color: rebeccapurple; /* purple crop icon */
  font-size: 16px;
}
.preview-crop-btn:disabled {
  /* explicit greys for disabled state (background + icon) */
  background: #505050; /* lighter grey background */
  opacity: 1; /* override global button:disabled opacity */
  cursor: not-allowed;
}
.preview-crop-btn:disabled i {
  color: #8a8a8a; /* darker grey icon */
}

/* when in crop mode, arrange save and cancel so they don't overlap */
.preview-crop-btn.preview-crop-btn--save {
  /* primary action stays at top-right */
  right: 25px;
  top: 25px;
}
.preview-crop-btn.preview-crop-btn--cancel {
  /* sit to the left of the save button with an 8px gap */
  right: calc(25px + 40px + 8px);
  top: 25px;
}

/* Crop overlay visuals */
.crop-overlay {
  position: absolute;
  inset: 0;
  pointer-events: auto;
  z-index: 20;
}
.crop-dim {
  position: absolute;
  inset: 0;
  background: rgba(0,0,0,0.45);
  /* the selection box will sit above this and reveal the image */
}
.crop-box {
  position: absolute;
  box-sizing: border-box;
  border: 2px solid rgba(255,255,255,0.95);
  background: transparent;
  z-index: 25;
  pointer-events: auto;
  /* subtle corner marks via pseudo elements handled by .corner */
}
.crop-grid {
  position: absolute;
  inset: 0;
  pointer-events: none;
}
.crop-grid .v,
.crop-grid .h {
  position: absolute;
  background: rgba(255,255,255,0.6);
}
.crop-grid .v1 { left: 33.3333%; top: 0; bottom: 0; width: 1px; }
.crop-grid .v2 { left: 66.6666%; top: 0; bottom: 0; width: 1px; }
.crop-grid .h1 { top: 33.3333%; left: 0; right: 0; height: 1px; }
.crop-grid .h2 { top: 66.6666%; left: 0; right: 0; height: 1px; }

/* corners and sides */
.corner {
  position: absolute;
  width: 14px;
  height: 14px;
  background: rgba(255,255,255,0.95);
  border-radius: 2px;
  z-index: 30;
}
.corner.nw { left: -7px; top: -7px; cursor: nwse-resize; }
.corner.ne { right: -7px; top: -7px; cursor: nesw-resize; }
.corner.sw { left: -7px; bottom: -7px; cursor: nesw-resize; }
.corner.se { right: -7px; bottom: -7px; cursor: nwse-resize; }
.side {
  position: absolute;
  background: rgba(255,255,255,0.65);
  z-index: 28;
}
.side.n { left: 20%; right: 20%; top: -6px; height: 12px; cursor: ns-resize; }
.side.s { left: 20%; right: 20%; bottom: -6px; height: 12px; cursor: ns-resize; }
.side.w { top: 20%; bottom: 20%; left: -6px; width: 12px; cursor: ew-resize; }
.side.e { top: 20%; bottom: 20%; right: -6px; width: 12px; cursor: ew-resize; }

/* Ensure the selection area reveals the image by placing crop-box above the dim layer */
.crop-box { mix-blend-mode: normal; }

/* debug outline while dragging splitter */
.preview-container.dragging {
  outline: 2px dashed rgba(255, 255, 255, 0.25);
}

.placeholder {
  text-align: center;
}

.placeholder p {
  margin: 0 0 1rem 0;
}

.preview {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  border-radius: 6px;
}

.controls {
  margin-top: 1rem;
  display: flex;
  gap: 0.5rem;
}

button {
  padding: 0.5rem 1rem;
  border-radius: 6px;
  border: 1px solid rgba(255,255,255,0.12);
  background: transparent;
  color: inherit; /* ensure text is visible on dark/light themes */
  cursor: pointer;
}

button:hover {
  filter: brightness(0.98);
}

button:disabled {
  opacity: 0.45;
  cursor: not-allowed;
}

@media (max-width: 800px) {
  .app-layout {
    grid-template-columns: 1fr;
  }
  .sidebar {
    order: 2;
    height: auto;
  }
  .preview-area {
    order: 1;
    height: auto;
  }
  .dropzone {
    height: auto;
    min-height: 220px;
  }
  .splitter {
    display: none;
  }
}
